// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SqliteStorage;

namespace SqliteStorage.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("BeastHunterData.Enemy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Enemies");
                });

            modelBuilder.Entity("BeastHunterData.EnemyItem", b =>
                {
                    b.Property<int>("EnemyId");

                    b.Property<int>("ItemId");

                    b.Property<int>("Chance");

                    b.HasKey("EnemyId", "ItemId");

                    b.ToTable("EnemyItems");
                });

            modelBuilder.Entity("BeastHunterData.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BeastHunterData.Reputation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Bandits");

                    b.Property<int>("Church");

                    b.Property<int>("Nobles");

                    b.Property<int>("Peasants");

                    b.HasKey("Id");

                    b.ToTable("Reputations");
                });

            modelBuilder.Entity("BeastHunterData.EnemyItem", b =>
                {
                    b.HasOne("BeastHunterData.Enemy")
                        .WithMany("EnemyItems")
                        .HasForeignKey("EnemyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
